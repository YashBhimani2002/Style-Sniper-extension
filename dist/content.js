/******/ (() => { // webpackBootstrap
/*!********************************!*\
  !*** ./src/content/content.js ***!
  \********************************/
var body = document.getElementsByTagName("body")[0];
body.onmouseover = function (e) {
  chrome.storage.local.get('toggleStatus', function (response) {
    // Check if toggleStatus is defined and true
    if (!response || !response.toggleStatus) {
      e.stopPropagation();
      e.preventDefault();
      return; // Stop further execution if toggleStatus is undefined or false
    }

    // Get the element under the cursor
    var element = document.elementFromPoint(e.clientX, e.clientY);
    if (!element || element.tagName === "HTML") {
      return; // Ignore the <html> element or undefined targets
    }
    console.log({
      id: element.id,
      name: element.className,
      content: element.textContent.trim(),
      style: element.style.cssText
    });
    // Create the iframe element
    var iframe = document.createElement("iframe");
    iframe.className = "custom-iframe";
    iframe.style.position = "absolute";
    iframe.style.backgroundColor = "white"; // White background for iframe
    iframe.style.color = "black"; // Text color set to black
    iframe.style.padding = "10px";
    iframe.style.border = "2px solid black"; // Black border
    iframe.style.borderRadius = "20px"; // 20px border radius
    iframe.style.pointerEvents = "none"; // Ensure iframe doesn't block interactions with the page
    iframe.style.fontSize = "12px";
    iframe.style.zIndex = "9999";
    iframe.style.boxShadow = "0px 4px 6px rgba(0, 0, 0, 0.2)"; // Adding a box-shadow for the iframe

    // Create a function to update iframe position and content
    var updateIframeContent = function updateIframeContent(e, element) {
      var iframeDoc = iframe.contentWindow.document;

      // Create content with element details
      var content = "\n        <p>Hovering over:: ".concat(element.tagName, "</p>\n        <p>ID: ").concat(element.id || 'N/A', "</p>\n        <p>Class: ").concat(element.className || 'N/A', "</p>\n        <p>Content: ").concat(element.textContent || 'N/A', "</p>\n    ");

      // Set the iframe's body content
      iframeDoc.body.innerHTML = content;

      // Update iframe position based on mouse position
      iframe.style.top = "".concat(e.clientY + 10, "px"); // 10px offset below the cursor
      iframe.style.left = "".concat(e.clientX + 10, "px"); // 10px offset to the right of the cursor
    };

    // Attach mousemove event listener to the document
    document.body.onmousemove = function (e) {
      // Get the element under the mouse
      var element = document.elementFromPoint(e.clientX, e.clientY);
      if (!element || element.tagName === "HTML") return; // Skip if hovering over HTML element

      // If iframe is not appended, create and append it
      if (!document.body.contains(iframe)) {
        document.body.appendChild(iframe);
      } else {
        document.getElementsByClassName('custom-iframe').item(0).remove();
      }

      // Update the iframe content and position
      updateIframeContent(e, element);
    };
    element.onmouseout = function () {
      document.getElementsByClassName('custom-iframe').item(0).remove();
    };
  });
};
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OlsiY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYm9keVwiKVswXTtcclxuXHJcbmJvZHkub25tb3VzZW92ZXIgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KCd0b2dnbGVTdGF0dXMnLCAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAvLyBDaGVjayBpZiB0b2dnbGVTdGF0dXMgaXMgZGVmaW5lZCBhbmQgdHJ1ZVxyXG4gICAgICAgIGlmICghcmVzcG9uc2UgfHwgIXJlc3BvbnNlLnRvZ2dsZVN0YXR1cykge1xyXG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHJldHVybjsgLy8gU3RvcCBmdXJ0aGVyIGV4ZWN1dGlvbiBpZiB0b2dnbGVTdGF0dXMgaXMgdW5kZWZpbmVkIG9yIGZhbHNlXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBHZXQgdGhlIGVsZW1lbnQgdW5kZXIgdGhlIGN1cnNvclxyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KGUuY2xpZW50WCwgZS5jbGllbnRZKTtcclxuICAgICAgICBpZiAoIWVsZW1lbnQgfHwgZWxlbWVudC50YWdOYW1lID09PSBcIkhUTUxcIikge1xyXG4gICAgICAgICAgICByZXR1cm47IC8vIElnbm9yZSB0aGUgPGh0bWw+IGVsZW1lbnQgb3IgdW5kZWZpbmVkIHRhcmdldHNcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHtcclxuICAgICAgICAgICAgaWQ6IGVsZW1lbnQuaWQsXHJcbiAgICAgICAgICAgIG5hbWU6IGVsZW1lbnQuY2xhc3NOYW1lLFxyXG4gICAgICAgICAgICBjb250ZW50OiBlbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSxcclxuICAgICAgICAgICAgc3R5bGU6IGVsZW1lbnQuc3R5bGUuY3NzVGV4dFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIENyZWF0ZSB0aGUgaWZyYW1lIGVsZW1lbnRcclxuICAgICAgICBjb25zdCBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xyXG4gICAgICAgIGlmcmFtZS5jbGFzc05hbWUgPSBcImN1c3RvbS1pZnJhbWVcIjtcclxuICAgICAgICBpZnJhbWUuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XHJcbiAgICAgICAgaWZyYW1lLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwid2hpdGVcIjsgIC8vIFdoaXRlIGJhY2tncm91bmQgZm9yIGlmcmFtZVxyXG4gICAgICAgIGlmcmFtZS5zdHlsZS5jb2xvciA9IFwiYmxhY2tcIjsgIC8vIFRleHQgY29sb3Igc2V0IHRvIGJsYWNrXHJcbiAgICAgICAgaWZyYW1lLnN0eWxlLnBhZGRpbmcgPSBcIjEwcHhcIjtcclxuICAgICAgICBpZnJhbWUuc3R5bGUuYm9yZGVyID0gXCIycHggc29saWQgYmxhY2tcIjsgIC8vIEJsYWNrIGJvcmRlclxyXG4gICAgICAgIGlmcmFtZS5zdHlsZS5ib3JkZXJSYWRpdXMgPSBcIjIwcHhcIjsgIC8vIDIwcHggYm9yZGVyIHJhZGl1c1xyXG4gICAgICAgIGlmcmFtZS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7ICAvLyBFbnN1cmUgaWZyYW1lIGRvZXNuJ3QgYmxvY2sgaW50ZXJhY3Rpb25zIHdpdGggdGhlIHBhZ2VcclxuICAgICAgICBpZnJhbWUuc3R5bGUuZm9udFNpemUgPSBcIjEycHhcIjtcclxuICAgICAgICBpZnJhbWUuc3R5bGUuekluZGV4ID0gXCI5OTk5XCI7XHJcbiAgICAgICAgaWZyYW1lLnN0eWxlLmJveFNoYWRvdyA9IFwiMHB4IDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIpXCI7ICAvLyBBZGRpbmcgYSBib3gtc2hhZG93IGZvciB0aGUgaWZyYW1lXHJcblxyXG4gICAgICAgIC8vIENyZWF0ZSBhIGZ1bmN0aW9uIHRvIHVwZGF0ZSBpZnJhbWUgcG9zaXRpb24gYW5kIGNvbnRlbnRcclxuICAgICAgICBjb25zdCB1cGRhdGVJZnJhbWVDb250ZW50ID0gKGUsIGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaWZyYW1lRG9jID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XHJcblxyXG4gICAgICAgICAgICAvLyBDcmVhdGUgY29udGVudCB3aXRoIGVsZW1lbnQgZGV0YWlsc1xyXG4gICAgICAgICAgICBjb25zdCBjb250ZW50ID0gYFxyXG4gICAgICAgIDxwPkhvdmVyaW5nIG92ZXI6OiAke2VsZW1lbnQudGFnTmFtZX08L3A+XHJcbiAgICAgICAgPHA+SUQ6ICR7ZWxlbWVudC5pZCB8fCAnTi9BJ308L3A+XHJcbiAgICAgICAgPHA+Q2xhc3M6ICR7ZWxlbWVudC5jbGFzc05hbWUgfHwgJ04vQSd9PC9wPlxyXG4gICAgICAgIDxwPkNvbnRlbnQ6ICR7ZWxlbWVudC50ZXh0Q29udGVudCB8fCAnTi9BJ308L3A+XHJcbiAgICBgO1xyXG5cclxuICAgICAgICAgICAgLy8gU2V0IHRoZSBpZnJhbWUncyBib2R5IGNvbnRlbnRcclxuICAgICAgICAgICAgaWZyYW1lRG9jLmJvZHkuaW5uZXJIVE1MID0gY29udGVudDtcclxuXHJcbiAgICAgICAgICAgIC8vIFVwZGF0ZSBpZnJhbWUgcG9zaXRpb24gYmFzZWQgb24gbW91c2UgcG9zaXRpb25cclxuICAgICAgICAgICAgaWZyYW1lLnN0eWxlLnRvcCA9IGAke2UuY2xpZW50WSArIDEwfXB4YDsgIC8vIDEwcHggb2Zmc2V0IGJlbG93IHRoZSBjdXJzb3JcclxuICAgICAgICAgICAgaWZyYW1lLnN0eWxlLmxlZnQgPSBgJHtlLmNsaWVudFggKyAxMH1weGA7ICAvLyAxMHB4IG9mZnNldCB0byB0aGUgcmlnaHQgb2YgdGhlIGN1cnNvclxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vIEF0dGFjaCBtb3VzZW1vdmUgZXZlbnQgbGlzdGVuZXIgdG8gdGhlIGRvY3VtZW50XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5vbm1vdXNlbW92ZSA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgIC8vIEdldCB0aGUgZWxlbWVudCB1bmRlciB0aGUgbW91c2VcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoZS5jbGllbnRYLCBlLmNsaWVudFkpO1xyXG4gICAgICAgICAgICBpZiAoIWVsZW1lbnQgfHwgZWxlbWVudC50YWdOYW1lID09PSBcIkhUTUxcIikgcmV0dXJuOyAgLy8gU2tpcCBpZiBob3ZlcmluZyBvdmVyIEhUTUwgZWxlbWVudFxyXG5cclxuICAgICAgICAgICAgLy8gSWYgaWZyYW1lIGlzIG5vdCBhcHBlbmRlZCwgY3JlYXRlIGFuZCBhcHBlbmQgaXRcclxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5ib2R5LmNvbnRhaW5zKGlmcmFtZSkpIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2N1c3RvbS1pZnJhbWUnKS5pdGVtKDApLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBVcGRhdGUgdGhlIGlmcmFtZSBjb250ZW50IGFuZCBwb3NpdGlvblxyXG4gICAgICAgICAgICB1cGRhdGVJZnJhbWVDb250ZW50KGUsIGVsZW1lbnQpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGVsZW1lbnQub25tb3VzZW91dCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY3VzdG9tLWlmcmFtZScpLml0ZW0oMCkucmVtb3ZlKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH0pO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiYm9keSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJvbm1vdXNlb3ZlciIsImUiLCJjaHJvbWUiLCJzdG9yYWdlIiwibG9jYWwiLCJnZXQiLCJyZXNwb25zZSIsInRvZ2dsZVN0YXR1cyIsInN0b3BQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiZWxlbWVudCIsImVsZW1lbnRGcm9tUG9pbnQiLCJjbGllbnRYIiwiY2xpZW50WSIsInRhZ05hbWUiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJuYW1lIiwiY2xhc3NOYW1lIiwiY29udGVudCIsInRleHRDb250ZW50IiwidHJpbSIsInN0eWxlIiwiY3NzVGV4dCIsImlmcmFtZSIsImNyZWF0ZUVsZW1lbnQiLCJwb3NpdGlvbiIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwicGFkZGluZyIsImJvcmRlciIsImJvcmRlclJhZGl1cyIsInBvaW50ZXJFdmVudHMiLCJmb250U2l6ZSIsInpJbmRleCIsImJveFNoYWRvdyIsInVwZGF0ZUlmcmFtZUNvbnRlbnQiLCJpZnJhbWVEb2MiLCJjb250ZW50V2luZG93IiwiY29uY2F0IiwiaW5uZXJIVE1MIiwidG9wIiwibGVmdCIsIm9ubW91c2Vtb3ZlIiwiY29udGFpbnMiLCJhcHBlbmRDaGlsZCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpdGVtIiwicmVtb3ZlIiwib25tb3VzZW91dCJdLCJzb3VyY2VSb290IjoiIn0=